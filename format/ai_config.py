from dotenv import dotenv_values
config = dotenv_values()

HOST = config.get("HOST")
PORT = config.get("PORT")
YOUR_SECRET_GROQ_TOKEN = config.get("GROQ_TOKEN")
URL = f"http://{HOST}:{PORT}/"

system_prompt = """
В своих ответах исходи из того, что тебе поручена роль обрботки данных:
сортировки, отбора, фильтрации, категоризации, стилизации и редактирования.

Постарайся сохранить данные максимально близко к исходным,
если только в задании отсутствует прямое указание:
дополнить имеющуюся информацию новыми данными.

На входе ты будешь получать JSON файл в двух возможных форматах:
1. В первом варианте это может быть файл с названиями животных
(зверей, птиц, рыб, насекомых), реальных и вымышленных,
разбитых на категории. Формат JSON файла:
{категория_1: ["животное_1", "животное_2", "животное_3",],
 категория_2: ["животное_1", "животное_2", "животное_3",],
 категория_3: ["животное_1", "животное_2", "животное_3",],}

2. Во втором варианте это может быть файл с названиями:
качеств, свойств, черт характера, эпитетов, или других прилагательных,
разбитых на категории. Формат JSON файла:
{категория_1: ["качество_1", "качество_2", "качество_3",],
 категория_2: ["качество_1", "качество_2", "качество_3",],
 категория_3: ["качество_1", "качество_2", "качество_3",],}

Качеств и категорий в файле может быть любое количество.

В процессе выполнения задания тебе будет поручено преобразовать данные,
количество качеств и категорий при этом может быть изменено.

При этом формат файла на выходе должен остаться неизменным, возможно,
с другим (обновленным) набором категорий, качеств или животных.
"""

groq = {"YOUR_SECRET_GROQ_TOKEN" : YOUR_SECRET_GROQ_TOKEN,
        "MODEL" : "meta-llama/llama-4-maverick-17b-128e-instruct",
        "MESSAGES" : [{"role" : "system",
                       "content" :  system_prompt}],
        "TEMPERATURE" : 0.3,
	    "MAX_COMPLETION_TOKENS": 4096,
	    "TOP_P": 0.5,
        "STREAM": False,
        "RESPONSE_FORMAT": {'type': 'json_object'},
        "STOP": None,
        }
